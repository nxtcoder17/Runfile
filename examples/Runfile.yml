# vim: set ft=yaml:
version: 0.0.1

includes:
  file1: 
    runfile: ./run1/Runfile
    # dir: ../
  run2: 
    runfile: ./run2/Runfile

env:
  global_k1: "v1"

dotenv:
  - ../.secrets/env

tasks:
  cook:
    env:
      k1: v1
      k2: 'f"\( asfsadfssdfas asfd $Asdfasdfa'
      k3:
        sh: echo -n "hello"
      k4:
        required: true
      k5:
        default:
          # value: "this is default value"
          # sh: echo this should be the default value
          gotmpl: len "asdfadf"
    # dotenv:
    #   - ../.secrets/env
    cmd: 
      # - sleep 5
      # - echo "hi hello"
      # - echo "value of k1 is '$k1'"
      # - echo "value of k2 is '$k2'"
      # - echo "value of k3 is '$k3'"
      - echo "hello from cook"
      - echo "value of key_id (from .dotenv) is '$key_id', ${#key_id}"
      - echo "k4 is $k4"
      - echo "k5 is $k5"

  clean:
    name: clean
    shell: ["python", "-c"]
    dotenv:
      - ../.secrets/env
    cmd:
      - run: laundry
        # vars:
        #   k1: v1
      - |+
        import secrets
        import os
        import time
        # print("key_id from env: ", os.environ['key_id'])
        # time.sleep(2)
        print("hello from clean")
        print(secrets.token_hex(32))

  laundry:
    name: laundry
    shell: ["node", "-e"]
    env:
      k4:
        default:
          sh: |+
           console.log('1234' == '23344')
    cmd: 
      - run: cook
      - console.log(process.env.k4)
      - console.log("hello from laundry")

  eat:
    name: eat
    env:
      item: asdfasfd
    requires:
      - gotmpl: gt (len "sdfsdfas") 5
    cmd: 
      - echo "eat"
  sleep:
    name: sleep
    cmd:
      - echo "sleep"
  code:
    name: code
    cmd:
      - echo "writing to stdout" 
      - echo "writing to stderr" 1>&2
